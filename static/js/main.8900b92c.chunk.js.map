{"version":3,"sources":["phonebook/Filter/Filter.module.css","App.module.css","phonebook/Contacts/ContactStyles.module.css","redux/phonebook/phonebook-actions.js","phonebook/Contacts/ContactForm.jsx","phonebook/Contacts/ContactList.jsx","phonebook/Filter/Filter.jsx","App.js","reportWebVitals.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","text","payload","id","uuidv4","name","number","deleteContact","filterContacts","connect","contacts","phonebook","items","dispatch","handleSubmit","useState","setName","setNumber","handleChange","e","target","value","className","s","form","onSubmit","preventDefault","find","contact","toLowerCase","alert","label","inputName","type","pattern","title","required","onChange","inputTel","btn","fillterContacts","filter","normalizeFilter","includes","contactsList","map","contactsListItem","onClick","delBtn","state","idF","htmlFor","filterInput","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","combineReducers","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8900b92c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2sqmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1hFTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactStyles_form__10_W-\",\"label\":\"ContactStyles_label__3BFDw\",\"inputName\":\"ContactStyles_inputName__3W_AQ\",\"inputTel\":\"ContactStyles_inputTel__3RUVp\",\"btn\":\"ContactStyles_btn__qlA1k\",\"delBtn\":\"ContactStyles_delBtn__3wcS8\",\"contactsList\":\"ContactStyles_contactsList__Sk0Ei\",\"contactsListItem\":\"ContactStyles_contactsListItem__3sj8A\"};","import { createAction } from '@reduxjs/toolkit';\r\n// import types from './phonebook-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const addContact = createAction('contacts/add', text => ({\r\n    payload: {\r\n        id: uuidv4(),\r\n        name: text[0],\r\n        number: text[1]\r\n    }\r\n}));\r\nexport const deleteContact = createAction('contacts/delete');\r\nexport const filterContacts = createAction('contacts/filter');\r\n","import { useState } from 'react';\r\nimport s from './ContactStyles.module.css';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux'\r\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\r\n\r\n// console.log(phonebookActions)\r\n\r\nfunction ContactForm({ contacts, handleSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const clearState = () => {\r\n        setName('');\r\n        setNumber('');\r\n\r\n        return;\r\n    }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            \r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n     const handleSubmitForm = e => {\r\n         e.preventDefault();\r\n\r\n         const availableContact = contacts.find(contact =>  contact.name.toLowerCase() === name.toLowerCase())\r\n\r\n            if (availableContact) {\r\n                alert(`${contacts.name} is already in contacts.`);\r\n                return;\r\n            };\r\n       \r\n\r\n        handleSubmit(name, number);\r\n        clearState();\r\n    }\r\n\r\n\r\nreturn ( \r\n<>\r\n            <form className={s.form} onSubmit={handleSubmitForm}>\r\n                <label className={s.label} >Name</label>\r\n                    <input\r\n                    className={s.inputName}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={name}\r\n                    />\r\n\r\n                    <label className={s.label} >Number</label>\r\n                    <input\r\n                    className={s.inputTel}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    value={number}\r\n                />\r\n\r\n                <button\r\n                    className={s.btn}\r\n                    type=\"submit\"\r\n                >\r\n                    Add contact\r\n                </button>\r\n                </form>\r\n</>\r\n        );\r\n}\r\n\r\nconst mapStateToProps = ({ phonebook }) => ({\r\n    contacts: phonebook.items\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleSubmit: ( name, number ) => dispatch(addContact([name, number]))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport s from './ContactStyles.module.css';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\r\nimport { connect } from 'react-redux'\r\n// import { useEffect } from 'react';\r\n\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n        return (\r\n            <>\r\n                <ul className={s.contactsList}>\r\n                    {contacts.map(contact => (\r\n                        <li\r\n                            key={contact.id}\r\n                            className={s.contactsListItem}\r\n                        > {contact.name}: {contact.number}\r\n\r\n                            <span\r\n                                onClick={() => deleteContact(contact.id)}\r\n                                className={s.delBtn}\r\n                            >-</span>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </>\r\n        );\r\n};\r\n\r\nconst fillterContacts = (contacts, filter) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    const filteredContacts = contacts.filter(({ name }) => name.toLowerCase().includes(normalizeFilter));\r\n    return filteredContacts;\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//     const { filter, contactItems } = state.phonebook;\r\n//     const filteredContacts = fillterContacts(contactItems, filter);\r\n\r\n//     return {\r\n//         contacts: filteredContacts,\r\n//     };\r\n// };\r\n\r\nconst mapStateToProps = ({ phonebook: { filter, items } }) => ({\r\n   contacts:  fillterContacts(items, filter)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    deleteContact: (id) => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\nimport s from './Filter.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux'\r\nimport { filterContacts } from '../../redux/phonebook/phonebook-actions';\r\n\r\nfunction Filter ({ onChange, value }) {\r\n    const idF = uuidv4();\r\n\r\n        return (\r\n            <>\r\n                <label\r\n                    htmlFor={idF}\r\n                    className={s.filter}\r\n                >Find contacts by name\r\n                </label>\r\n                <input\r\n                    id={idF}\r\n                    className={s.filterInput}\r\n                    type='text'\r\n                    name='filter'\r\n                    value={value}\r\n                    onChange={onChange}\r\n                />\r\n             </>\r\n        );\r\n};\r\n    \r\nconst mapStateToProps = state => ({\r\n  contacts: state.phonebook.filter,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: e => dispatch(filterContacts(e.target.value))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import ContactForm from './phonebook/Contacts/ContactForm';\nimport ContactList from './phonebook/Contacts/ContactList';\nimport Filter from './phonebook/Filter/Filter';\nimport s from './App.module.css';\n\n\nfunction App() {\n  return (\n      <>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm />\n        \n        <h2 className={s.title}>Contacts</h2>\n        <Filter/>\n        \n        <ContactList />\n      </>\n    )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import types from './phonebook-types';\r\nimport { addContact, deleteContact, filterContacts } from './phonebook-actions';\r\n// import {actions} from './phonebook-actions';\r\n\r\n\r\nconst items = createReducer([], {\r\n    [addContact]: (state, { payload }) => [...state, payload],\r\n    [deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});\r\n\r\n\r\n// const initialState = {\r\n//     contacts: JSON.parse(window.localStorage.getItem('contacts')) ?? [],\r\n// };\r\n\r\n// const contactItems = (state = initialState.contacts, { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             const availableContact = state.find(contact =>  contact.name.toLowerCase() === payload.name.toLowerCase())\r\n\r\n//             if (availableContact) {\r\n//                 alert(`${payload.name} is already in contacts.`);\r\n//                 return [...state];\r\n//             };\r\n\r\n            \r\n//             window.localStorage.setItem('contacts', JSON.stringify([payload, ...state]));\r\n//             // console.log(payload)\r\n//             return [payload, ...state];\r\n\r\n        \r\n//         case types.DELETE:\r\n\r\n//             const newContacts = state.filter(({ id }) => id !== payload);\r\n//             window.localStorage.setItem('contacts', JSON.stringify(newContacts));\r\n            \r\n//             return [...newContacts];\r\n        \r\n//         default:\r\n//             return state;\r\n//     };\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//     switch (type) {\r\n//         case types.FILTER:\r\n//             return payload;\r\n\r\n//         default:\r\n//             return state;\r\n//     };\r\n// };\r\n\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n// import logger from 'redux-logger';\r\n// import { curryGetDefaultMiddleware } from '@reduxjs/toolkit/dist/getDefaultMiddleware';\r\n\r\n// console.log(process.env)\r\n// const middleware = [...MiddlewareArray, logger]\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n    phonebook: phonebookReducer,\r\n},\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}